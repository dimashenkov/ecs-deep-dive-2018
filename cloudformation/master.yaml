Description: >

    This template deploys a VPC, with a pair of public and private subnets spread
    across two Availabilty Zones. It deploys an Internet Gateway, with a default
    route on the public subnets. It deploys a pair of NAT Gateways (one in each AZ),
    and default routes for them in the private subnets.

    It then deploys a highly available ECS cluster using an AutoScaling Group, with
    ECS hosts distributed across multiple Availability Zones.

    Finally, it deploys a pair of example ECS services from containers published in
    Amazon EC2 Container Registry (Amazon ECR).

    Last Modified: 2018-09-21
    Author: Mark Richman <mark@linuxacademy.com>

Resources:

    VPC:
        Type: AWS::CloudFormation::Stack
        Properties:
            TemplateURL: https://s3-eu-west-1.amazonaws.com/ecs-deep-dive-2018-64535/ecs-deep-dive-2018/cloudformation/vpc.yaml
            Parameters:
                EnvironmentName: !Ref AWS::StackName
                VpcCIDR: 10.0.0.0/16
                PublicSubnet1CIDR: 10.0.8.0/21
                PublicSubnet2CIDR: 10.0.16.0/21
                PrivateSubnet1CIDR: 10.0.24.0/21
                PrivateSubnet2CIDR: 10.0.32.0/21

    SecurityGroups:
        Type: AWS::CloudFormation::Stack
        Properties:
            TemplateURL: https://s3-eu-west-1.amazonaws.com/ecs-deep-dive-2018-64535/ecs-deep-dive-2018/cloudformation/security-groups.yaml
            Parameters:
                EnvironmentName: !Ref AWS::StackName
                VPC: !GetAtt VPC.Outputs.VPC

    ALB:
        Type: AWS::CloudFormation::Stack
        Properties:
            TemplateURL: https://s3-eu-west-1.amazonaws.com/ecs-deep-dive-2018-64535/ecs-deep-dive-2018/cloudformation/load-balancers.yaml
            Parameters:
                EnvironmentName: !Ref AWS::StackName
                VPC: !GetAtt VPC.Outputs.VPC
                Subnets: !GetAtt VPC.Outputs.PublicSubnets
                SecurityGroup: !GetAtt SecurityGroups.Outputs.LoadBalancerSecurityGroup

    ECS:
        Type: AWS::CloudFormation::Stack
        Properties:
            TemplateURL: https://s3-eu-west-1.amazonaws.com/ecs-deep-dive-2018-64535/ecs-deep-dive-2018/cloudformation/ecs-cluster.yaml
            Parameters:
                EnvironmentName: !Ref AWS::StackName
                InstanceType: t2.micro
                ClusterSize: 4
                VPC: !GetAtt VPC.Outputs.VPC
                SecurityGroup: !GetAtt SecurityGroups.Outputs.ECSHostSecurityGroup
                Subnets: !GetAtt VPC.Outputs.PrivateSubnets

    LifecycleHook:
        Type: AWS::CloudFormation::Stack
        Properties:
            TemplateURL: https://s3-eu-west-1.amazonaws.com/ecs-deep-dive-2018-64535/ecs-deep-dive-2018/cloudformation/lifecyclehook.yaml
            Parameters:
                Cluster: !GetAtt ECS.Outputs.Cluster
                ECSAutoScalingGroupName: !GetAtt ECS.Outputs.ECSAutoScalingGroupName

Outputs:

    LoadBalancerUrl:
        Description: The URL endpoint for the ALB
        Value: !Join ["", [ !GetAtt ALB.Outputs.LoadBalancerUrl, "/" ]]
